[{"/Users/mykel/dev/uwbootcamp/homework/Real_Employees_Search/src/index.js":"1","/Users/mykel/dev/uwbootcamp/homework/Real_Employees_Search/src/App.js":"2","/Users/mykel/dev/uwbootcamp/homework/Real_Employees_Search/src/components/employeeCard.js":"3","/Users/mykel/dev/uwbootcamp/homework/Real_Employees_Search/src/components/navbar.js":"4","/Users/mykel/dev/uwbootcamp/homework/Real_Employees_Search/src/logic/searchLogic.js":"5","/Users/mykel/dev/uwbootcamp/homework/Real_Employees_Search/src/components/searchComponents/searchBar.js":"6","/Users/mykel/dev/uwbootcamp/homework/Real_Employees_Search/src/components/search.js":"7","/Users/mykel/dev/uwbootcamp/homework/Real_Employees_Search/src/components/searchComponents/searchTypeButton.js":"8"},{"size":246,"mtime":1611865754839,"results":"9","hashOfConfig":"10"},{"size":489,"mtime":1611882990633,"results":"11","hashOfConfig":"10"},{"size":1510,"mtime":1611877072474,"results":"12","hashOfConfig":"10"},{"size":358,"mtime":1611870152546,"results":"13","hashOfConfig":"10"},{"size":181,"mtime":1611877261404,"results":"14","hashOfConfig":"10"},{"size":654,"mtime":1611878396398,"results":"15","hashOfConfig":"10"},{"size":629,"mtime":1611883583856,"results":"16","hashOfConfig":"10"},{"size":0,"mtime":1611878618587,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"g0wjxe",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mykel/dev/uwbootcamp/homework/Real_Employees_Search/src/index.js",[],["36","37"],"/Users/mykel/dev/uwbootcamp/homework/Real_Employees_Search/src/App.js",[],"/Users/mykel/dev/uwbootcamp/homework/Real_Employees_Search/src/components/employeeCard.js",["38"],"import React, { useState, useEffect } from 'react'\nimport { Card, Image } from 'react-bootstrap';\n// import { searchValue } from './searchBar'\nimport searchLogic from '../logic/searchLogic'\n\n\n\nexport default function EmployeeCard(props) {\n    const [error, setError] = useState(null)\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [employees, setEmployees] = useState([])\n    const [empFiltered, setEmpFiltered] = useState([])\n\n    useEffect(() => {\n        fetch('https://randomuser.me/api/?results=10')\n        .then(res => res.json())\n        .then(\n            (results) => {\n                setEmployees(results.results)\n                setIsLoaded(true)\n            },\n            (error) => {\n                setError(error)\n                setIsLoaded(true)\n            }\n        )\n    }, [])\n\n    useEffect(\n        () => {\n            setEmpFiltered(searchLogic(employees, props.searchInput))\n        },\n        [props.searchInput]\n    )\n\n    if (error) {\n        return <div>Error: {error.message}</div>\n    } else if (!isLoaded) {\n        return <div>Loading...</div>\n    } else {\n        return (\n        <>\n            {empFiltered.map(emp => (\n                <Card key={emp.login.uuid}>\n                    <Card.Body>\n                        <h2>{emp.name.title} {emp.name.first} {emp.name.last}</h2>\n                        <Image src={emp.picture.medium} roundedCircle/>\n                    </Card.Body>\n                </Card>\n\n            ))}\n        </>\n        )\n    }\n\n}\n","/Users/mykel/dev/uwbootcamp/homework/Real_Employees_Search/src/components/navbar.js",[],"/Users/mykel/dev/uwbootcamp/homework/Real_Employees_Search/src/logic/searchLogic.js",[],"/Users/mykel/dev/uwbootcamp/homework/Real_Employees_Search/src/components/searchComponents/searchBar.js",[],"/Users/mykel/dev/uwbootcamp/homework/Real_Employees_Search/src/components/search.js",["39"],"/Users/mykel/dev/uwbootcamp/homework/Real_Employees_Search/src/components/searchComponents/searchTypeButton.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":33,"column":9,"nodeType":"46","endLine":33,"endColumn":28,"suggestions":"47"},{"ruleId":"48","severity":1,"message":"49","line":3,"column":8,"nodeType":"50","messageId":"51","endLine":3,"endColumn":21},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'employees'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setEmpFiltered' needs the current value of 'employees'.","ArrayExpression",["54"],"no-unused-vars","'SearchTypeBtn' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},"Update the dependencies array to be: [employees, props.searchInput]",{"range":"57","text":"58"},[937,956],"[employees, props.searchInput]"]